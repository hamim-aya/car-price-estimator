{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYA\\\\Desktop\\\\tomobiltek\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    kilometrage: '',\n    anneeModele: '',\n    nombrePortes: '',\n    puissanceFiscale: '',\n    premiereMain: false,\n    typeBoite: 'manuelle',\n    typeCarburant: 'essence',\n    marque: '',\n    modele: '',\n    etat: 'Très bon',\n    origine: 'Wilmaya'\n  });\n  const [prediction, setPrediction] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const options = {\n    etat: ['Très bon', 'Bon', 'Moyen', 'Mauvais'],\n    typeBoite: ['manuelle', 'automatique'],\n    typeCarburant: ['essence', 'diesel', 'électrique', 'hybride'],\n    nombrePortes: ['3', '5']\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          kilometrage: parseFloat(formData.kilometrage) || 0,\n          anneeModele: parseFloat(formData.anneeModele) || 0,\n          nombrePortes: parseInt(formData.nombrePortes) || 0,\n          puissanceFiscale: parseInt(formData.puissanceFiscale) || 0,\n          premiereMain: formData.premiereMain,\n          typeBoite: formData.typeBoite,\n          typeCarburant: formData.typeCarburant,\n          marque: formData.marque,\n          modele: formData.modele,\n          etat: formData.etat,\n          origine: formData.origine\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Erreur du serveur');\n      }\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (err) {\n      console.error('Erreur API:', err);\n      setError(err.message || 'Erreur lors de la prédiction');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pr\\xE9diction du prix de voiture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"R\\xE9sultat de la pr\\xE9diction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"price\",\n        children: [Math.round(prediction).toLocaleString(), \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"disclaimer\",\n        children: \"* Estimation bas\\xE9e sur les informations fournies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VlkgfNUKuQM3mt/f9HA/MuWUQGI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","kilometrage","anneeModele","nombrePortes","puissanceFiscale","premiereMain","typeBoite","typeCarburant","marque","modele","etat","origine","prediction","setPrediction","isLoading","setIsLoading","error","setError","options","handleChange","e","name","value","type","checked","target","prev","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","parseFloat","parseInt","ok","errorData","json","Error","detail","data","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Math","round","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/AYA/Desktop/tomobiltek/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [formData, setFormData] = useState({\r\n    kilometrage: '',\r\n    anneeModele: '',\r\n    nombrePortes: '',\r\n    puissanceFiscale: '',\r\n    premiereMain: false,\r\n    typeBoite: 'manuelle',\r\n    typeCarburant: 'essence',\r\n    marque: '',\r\n    modele: '',\r\n    etat: 'Très bon',\r\n    origine: 'Wilmaya'\r\n  });\r\n\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const options = {\r\n    etat: ['Très bon', 'Bon', 'Moyen', 'Mauvais'],\r\n    typeBoite: ['manuelle', 'automatique'],\r\n    typeCarburant: ['essence', 'diesel', 'électrique', 'hybride'],\r\n    nombrePortes: ['3', '5']\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/predict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          kilometrage: parseFloat(formData.kilometrage) || 0,\r\n          anneeModele: parseFloat(formData.anneeModele) || 0,\r\n          nombrePortes: parseInt(formData.nombrePortes) || 0,\r\n          puissanceFiscale: parseInt(formData.puissanceFiscale) || 0,\r\n          premiereMain: formData.premiereMain,\r\n          typeBoite: formData.typeBoite,\r\n          typeCarburant: formData.typeCarburant,\r\n          marque: formData.marque,\r\n          modele: formData.modele,\r\n          etat: formData.etat,\r\n          origine: formData.origine\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Erreur du serveur');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPrediction(data.prediction);\r\n\r\n    } catch (err) {\r\n      console.error('Erreur API:', err);\r\n      setError(err.message || 'Erreur lors de la prédiction');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Prédiction du prix de voiture</h1>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* ... (gardez le reste de votre JSX inchangé) ... */}\r\n      </form>\r\n\r\n      {prediction !== null && (\r\n        <div className=\"prediction-result\">\r\n          <h2>Résultat de la prédiction</h2>\r\n          <p className=\"price\">{Math.round(prediction).toLocaleString()} €</p>\r\n          <p className=\"disclaimer\">* Estimation basée sur les informations fournies</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}