{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AYA\\\\Desktop\\\\tomobiltek\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    kilometrage: '',\n    anneeModele: ''\n    // ... tous vos autres champs\n  });\n  const [prediction, setPrediction] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      // Remplacez cette partie par votre appel API réel\n      const mockPrediction = Math.floor(Math.random() * 30000) + 5000; // Simulation\n\n      // Pour un vrai appel API :\n      // const response = await fetch('votre_api_endpoint', {\n      //   method: 'POST',\n      //   headers: { 'Content-Type': 'application/json' },\n      //   body: JSON.stringify(formData)\n      // });\n      // const data = await response.json();\n      // setPrediction(data.predictedPrice);\n\n      setTimeout(() => {\n        setPrediction(mockPrediction);\n        setIsLoading(false);\n      }, 1000); // Simule un temps de chargement\n    } catch (error) {\n      console.error(\"Erreur de prédiction:\", error);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pr\\xE9diction du prix de voiture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Calcul en cours...' : 'Prédire le prix'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"R\\xE9sultat de la pr\\xE9diction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"prediction-price\",\n        children: [\"Prix estim\\xE9 : \", prediction.toLocaleString(), \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"prediction-disclaimer\",\n        children: \"Cette estimation est fournie \\xE0 titre indicatif.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GmhFx60K7UcB8gn3nMN2fAhmsXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","kilometrage","anneeModele","prediction","setPrediction","isLoading","setIsLoading","handleChange","e","name","value","type","checked","target","prev","handleSubmit","preventDefault","mockPrediction","Math","floor","random","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","disabled","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/AYA/Desktop/tomobiltek/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [formData, setFormData] = useState({\r\n    kilometrage: '',\r\n    anneeModele: '',\r\n    // ... tous vos autres champs\r\n  });\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Remplacez cette partie par votre appel API réel\r\n      const mockPrediction = Math.floor(Math.random() * 30000) + 5000; // Simulation\r\n\r\n      // Pour un vrai appel API :\r\n      // const response = await fetch('votre_api_endpoint', {\r\n      //   method: 'POST',\r\n      //   headers: { 'Content-Type': 'application/json' },\r\n      //   body: JSON.stringify(formData)\r\n      // });\r\n      // const data = await response.json();\r\n      // setPrediction(data.predictedPrice);\r\n\r\n      setTimeout(() => {\r\n        setPrediction(mockPrediction);\r\n        setIsLoading(false);\r\n      }, 1000); // Simule un temps de chargement\r\n    } catch (error) {\r\n      console.error(\"Erreur de prédiction:\", error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Prédiction du prix de voiture</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Tous vos champs de formulaire ici */}\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Calcul en cours...' : 'Prédire le prix'}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Affichage du résultat */}\r\n      {prediction !== null && (\r\n        <div className=\"prediction-result\">\r\n          <h2>Résultat de la prédiction</h2>\r\n          <p className=\"prediction-price\">Prix estimé : {prediction.toLocaleString()} €</p>\r\n          <p className=\"prediction-disclaimer\">\r\n            Cette estimation est fournie à titre indicatif.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}